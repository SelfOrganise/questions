{"version":3,"sources":["components/AppBar.tsx","components/Centered.tsx","components/AuthenticatedApolloProvider.tsx","utilities/useApolloClient.ts","components/QuestionRow.tsx","components/Questions.tsx","components/AddQuestions.tsx","components/Welcome.tsx","pages/ManageQuestionsPage.tsx","components/PlayPage/ErrorMessage.tsx","components/PlayPage/NoQuestionsLeft.tsx","components/PlayPage/NotStarted.tsx","pages/PlayPage.tsx","utilities/time.ts","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","tabs","marginLeft","breakpoints","down","AppBar","useAuth0","logout","loginWithRedirect","isAuthenticated","history","useHistory","React","useState","currentTab","setCurrentTab","useEffect","location","pathname","classes","position","Toolbar","Box","display","alignItems","flexGrow","xs","sm","Typography","variant","Tabs","className","value","onChange","_","newTab","push","Tab","label","process","Button","color","onClick","returnTo","url","Centered","children","boxProps","marginTop","alignContent","justifyContent","justifyItems","AuthenticatedApolloProvider","props","client","getAccessTokenSilently","setClient","then","token","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","ApolloClient","cache","InMemoryCache","link","concat","useApolloClient","CircularProgress","DELETE_QUESTION","gql","QuestionRow","question","useMutation","deleteQuestion","loading","handleDeleteClick","useCallback","a","variables","id","update","data","getQuestionsQuery","readQuery","query","GET_QUESTIONS","questions","writeQuery","filter","q","canDelete","TableRow","TableCell","align","content","IconButton","disabled","size","Questions","useQuery","error","length","TableContainer","container","component","Paper","Table","TableHead","TableBody","map","ADD_QUESTION","AddQuestions","text","setText","addQuestions","submitError","handleOnClick","split","optimisticResponse","__typename","toOptimisticResponse","flexDirection","TextField","multiline","rows","placeholder","ev","target","message","Math","floor","random","createdBy","createdAtUtc","Welcome","auth","marginBottom","user","name","ManageQuestionsPage","paddingTop","ErrorMessage","NoQuestionsLeft","NotStarted","RANDOM_QUESTION","PlayPage","timestamp","useLazyQuery","fetchPolicy","getRandomQuestion","called","randomQuestion","paddingLeft","paddingRight","paper","Grow","timeout","in","Fade","elevation","height","date","formatDistanceToNow","parseInt","questionContainer","author","createdByName","nextQuestion","width","padding","textAlign","fontFamily","fontSize","flex","App","isLoading","Container","maxWidth","exact","path","window","origin","createMuiTheme","ReactDOM","render","StrictMode","domain","clientId","audience","scope","redirectUri","ThemeProvider","basename","document","getElementById"],"mappings":"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","file":"static/js/main.39372c50.chunk.js","sourcesContent":["import { useAuth0 } from \"@auth0/auth0-react\";\nimport MaterialAppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { url } from \"../index\";\n\nconst useStyles = makeStyles((theme) => ({\n  tabs: {\n    marginLeft: \"20px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: \"0\",\n    },\n  },\n}));\n\nexport function AppBar() {\n  const { logout, loginWithRedirect, isAuthenticated } = useAuth0();\n  const history = useHistory();\n  const [currentTab, setCurrentTab] = React.useState(\"/\");\n\n  useEffect(() => {\n    setCurrentTab(history.location.pathname);\n  }, [history]);\n\n  const classes = useStyles();\n\n  const handleTabChange = (_: unknown, newTab: string) => {\n    setCurrentTab(newTab);\n    history.push(newTab);\n  };\n\n  return (\n    <MaterialAppBar position=\"static\">\n      <Toolbar>\n        <Box display=\"flex\" alignItems=\"center\" flexGrow={1}>\n          <Box display={{ xs: \"none\", sm: \"block\" }}>\n            <Typography variant=\"h6\">⁉️ Questions ⁉️</Typography>\n          </Box>\n          {isAuthenticated && (\n            <Tabs\n              className={classes.tabs}\n              value={currentTab}\n              onChange={handleTabChange}\n            >\n              <Tab label=\"⚙️ Manage\" value=\"/\" />\n              {process.env.NODE_ENV !== \"production\" && <Tab label=\"🕹️ Play\" value=\"/play\" />}\n            </Tabs>\n          )}\n        </Box>\n        {isAuthenticated ? (\n          <Button color=\"inherit\" onClick={() => logout({ returnTo: url })}>\n            Logout\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            onClick={() => loginWithRedirect()}\n          >\n            Login\n          </Button>\n        )}\n      </Toolbar>\n    </MaterialAppBar>\n  );\n}\n","import Box from \"@material-ui/core/Box\";\nimport { BoxProps } from \"@material-ui/core/Box/Box\";\nimport React from \"react\";\n\nexport function Centered({\n  children,\n  ...boxProps\n}: React.PropsWithChildren<BoxProps>) {\n  return (\n    <Box\n      marginTop=\"10%\"\n      display=\"flex\"\n      alignItems=\"center\"\n      alignContent=\"center\"\n      justifyContent=\"center\"\n      justifyItems=\"center\"\n      {...boxProps}\n    >\n      {children}\n    </Box>\n  );\n}\n","import { ApolloProvider } from \"@apollo/client\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\nimport { useApolloClient } from \"../utilities/useApolloClient\";\nimport { Centered } from \"./Centered\";\n\nexport function AuthenticatedApolloProvider(\n  props: React.PropsWithChildren<unknown>\n) {\n  const client = useApolloClient();\n  if (!client) {\n    return (\n      <Centered>\n        <CircularProgress />\n      </Centered>\n    );\n  }\n\n  return <ApolloProvider client={client}>{props.children}</ApolloProvider>;\n}\n","import {\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n  NormalizedCacheObject,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useEffect, useState } from \"react\";\n\nexport function useApolloClient() {\n  const { getAccessTokenSilently, isAuthenticated } = useAuth0();\n  const [client, setClient] = useState<ApolloClient<NormalizedCacheObject>>();\n  useEffect(() => {\n    if (!isAuthenticated) {\n      return;\n    }\n\n    getAccessTokenSilently().then((token) => {\n      const httpLink = createHttpLink({\n        uri: process.env.REACT_APP_API_URL,\n      });\n\n      const authLink = setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            Authorization: `Bearer ${token}`,\n          },\n        };\n      });\n\n      setClient(\n        new ApolloClient({\n          cache: new InMemoryCache(),\n          link: authLink.concat(httpLink),\n        })\n      );\n    });\n  }, [isAuthenticated, getAccessTokenSilently]);\n\n  return client;\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { useCallback } from \"react\";\nimport { GET_QUESTIONS } from \"./Questions\";\nimport { Question } from \"./types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst DELETE_QUESTION = gql`\n  mutation addQuestion($id: Int!) {\n    deleteQuestion(id: $id)\n  }\n`;\n\nexport function QuestionRow({ question }: { question: Question }) {\n  const [deleteQuestion, { loading }] = useMutation(DELETE_QUESTION);\n\n  const handleDeleteClick = useCallback(async () => {\n    await deleteQuestion({\n      variables: { id: question.id },\n      update: (cache, { data }) => {\n        if (data.deleteQuestion !== true) {\n          return;\n        }\n\n        const getQuestionsQuery: any =\n          cache.readQuery({ query: GET_QUESTIONS }) || [];\n\n        if (!getQuestionsQuery.questions) {\n          return;\n        }\n\n        cache.writeQuery({\n          query: GET_QUESTIONS,\n          data: {\n            questions: [\n              ...getQuestionsQuery.questions.filter(\n                (q: Question) => q.id !== question.id\n              ),\n            ],\n          },\n        });\n      },\n    });\n  }, [deleteQuestion, question.id]);\n\n  const canDelete = !loading && question.id >= 0;\n\n  return (\n    <TableRow>\n      <TableCell align=\"left\">{question.content}</TableCell>\n      <TableCell align=\"right\">\n        <IconButton disabled={!canDelete} onClick={handleDeleteClick}>\n          {canDelete ? <DeleteOutlinedIcon /> : <CircularProgress size=\"1em\" />}\n        </IconButton>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import { gql, useQuery } from \"@apollo/client\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Centered } from \"./Centered\";\nimport { QuestionRow } from \"./QuestionRow\";\nimport { Question } from \"./types\";\n\nexport const GET_QUESTIONS = gql`\n  query getQuestions {\n    questions {\n      id\n      content\n      createdBy\n      createdAtUtc\n    }\n  }\n`;\n\nexport function Questions() {\n  const { data, error, loading } = useQuery(GET_QUESTIONS);\n  const classes = useStyles();\n\n  if (loading || data == null) {\n    return (\n      <Centered>\n        <Typography variant=\"body1\">Loading questions</Typography>\n      </Centered>\n    );\n  }\n\n  if (error) {\n    return (\n      <Centered>\n        <Typography variant=\"body1\">Error loading questions</Typography>\n      </Centered>\n    );\n  }\n\n  if (data.questions?.length <= 0) {\n    return (\n      <Centered>\n        <Typography variant=\"body1\">No questions added</Typography>\n      </Centered>\n    );\n  }\n\n  return (\n    <TableContainer className={classes.container} component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">Question</TableCell>\n            <TableCell align=\"right\" />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.questions.map((question: Question) => (\n            <QuestionRow question={question} key={question.id} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  container: {},\n}));\n","import { gql, useMutation } from \"@apollo/client\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useCallback, useState } from \"react\";\nimport { GET_QUESTIONS } from \"./Questions\";\n\nconst ADD_QUESTION = gql`\n  mutation addQuestions($questions: [String!]) {\n    addQuestions(questions: $questions) {\n      id\n      content\n      createdAtUtc\n      createdBy\n    }\n  }\n`;\n\nexport function AddQuestions() {\n  const [text, setText] = useState(\"\");\n\n  const [addQuestions, { error: submitError, loading }] = useMutation(\n    ADD_QUESTION\n  );\n\n  const handleOnClick = useCallback(async () => {\n    setText(\"\");\n    const questions = text.split(\"\\n\").filter((q) => q && q.length > 0);\n\n    await addQuestions({\n      variables: {\n        questions,\n      },\n      optimisticResponse: {\n        __typename: \"Mutation\",\n        addQuestions: questions.map((text) => toOptimisticResponse(text)),\n      },\n      update: (cache, { data }) => {\n        const query: any = cache.readQuery({ query: GET_QUESTIONS });\n        cache.writeQuery({\n          query: GET_QUESTIONS,\n          data: { questions: [...data.addQuestions, ...query.questions] },\n        });\n      },\n    });\n  }, [addQuestions, text, setText]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <TextField\n        variant=\"outlined\"\n        multiline={true}\n        rows={5}\n        label=\"Type in one or more questions\"\n        placeholder=\"Multiple questions can be entered by separating them with with a new line\"\n        value={text}\n        onChange={(ev) => setText(ev.target.value)}\n      />\n      <Box marginTop=\"10px\" display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          disabled={text.length === 0 || loading}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleOnClick}\n        >\n          Add question\n        </Button>\n      </Box>\n      <span>{submitError ? submitError.message : \"\"}</span>\n    </Box>\n  );\n}\n\nfunction toOptimisticResponse(text: string) {\n  return {\n    __typename: \"Question\",\n    id: -Math.floor(Math.random() * 100000000),\n    content: text,\n    createdBy: -1,\n    createdAtUtc: \"\",\n  };\n}\n","import { useAuth0 } from \"@auth0/auth0-react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nexport function Welcome() {\n  const auth = useAuth0();\n  return (\n    <Box marginBottom=\"10px\">\n      <Typography variant=\"h6\">Welcome {auth.user.name} 👋</Typography>\n    </Box>\n  );\n}\n","import Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport { AddQuestions } from \"../components/AddQuestions\";\nimport { Questions } from \"../components/Questions\";\nimport { Welcome } from \"../components/Welcome\";\n\nexport function ManageQuestionsPage() {\n  return (\n    <Box paddingTop={3}>\n      <Welcome />\n      <AddQuestions />\n      <Questions />\n    </Box>\n  );\n}\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { Centered } from '../Centered';\n\nexport function ErrorMessage({ message }: { message: string }) {\n  return (\n    <Centered>\n      <Typography color=\"error\">🛑 {message}. Sorry 😿.</Typography>\n    </Centered>\n  );\n}\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { Centered } from '../Centered';\n\nexport function NoQuestionsLeft() {\n  return (\n    <Centered>\n      <Typography>You have completed all questions.</Typography>\n    </Centered>\n  );\n}\n","import Button from '@material-ui/core/Button';\nimport React from 'react';\nimport { Centered } from '../Centered';\n\nexport function NotStarted({ onClick }: { onClick: () => void }) {\n  return (\n    <Centered>\n      <Button variant=\"contained\" onClick={onClick}>\n        Start\n      </Button>\n    </Centered>\n  );\n}\n","import { gql, useLazyQuery } from \"@apollo/client\";\nimport { Fade, Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { Centered } from \"../components/Centered\";\nimport { ErrorMessage } from \"../components/PlayPage/ErrorMessage\";\nimport { NoQuestionsLeft } from \"../components/PlayPage/NoQuestionsLeft\";\nimport { NotStarted } from \"../components/PlayPage/NotStarted\";\nimport { toRelativeTime } from \"../utilities/time\";\n\nconst RANDOM_QUESTION = gql`\n  query getRandomQuestion {\n    randomQuestion {\n      id\n      content\n      createdAtUtc\n      createdByName\n    }\n  }\n`;\n\nexport function PlayPage() {\n  const [getRandomQuestion, { data, loading, error, called }] = useLazyQuery(\n    RANDOM_QUESTION,\n    {\n      fetchPolicy: \"network-only\",\n    }\n  );\n\n  const question = data?.randomQuestion;\n  const classes = useStyles();\n\n  if (!called) {\n    return <NotStarted onClick={getRandomQuestion} />;\n  }\n\n  if (error) {\n    return <ErrorMessage message={error.message} />;\n  }\n\n  if (called && !loading && !question) {\n    return <NoQuestionsLeft />;\n  }\n\n  return (\n    <Box paddingTop={4} paddingLeft={2} paddingRight={2}>\n      {loading && (\n        <Centered className={classes.paper} marginTop={0}>\n          <CircularProgress />\n        </Centered>\n      )}\n      {!loading && question && (\n        <Grow timeout={1000} in={true}>\n          <Fade timeout={1000} in={true}>\n            <Paper className={classes.paper} elevation={4}>\n              <Box\n                height=\"100%\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                flexGrow=\"1\"\n              >\n                <Typography className={classes.date} variant=\"overline\">\n                  {toRelativeTime(question.createdAtUtc)} ago\n                </Typography>\n                <Box className={classes.questionContainer}>\n                  <span className={classes.question}>{question.content}</span>\n                </Box>\n                <Typography className={classes.author} variant=\"caption\">\n                  {question.createdByName}\n                </Typography>\n              </Box>\n            </Paper>\n          </Fade>\n        </Grow>\n      )}\n      {(loading || !error) && (\n        <Button\n          className={classes.nextQuestion}\n          color=\"primary\"\n          disabled={loading}\n          onClick={() => getRandomQuestion()}\n        >\n          📜 Next question\n        </Button>\n      )}\n    </Box>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  nextQuestion: {\n    marginTop: \"15px\",\n    width: \"100%\",\n  },\n  paper: {\n    padding: \"20px\",\n    height: \"60vh\",\n    display: \"flex\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  question: {\n    fontFamily: \"Indie Flower, cursive;\",\n    fontSize: \"1.8rem\",\n  },\n  questionContainer: {\n    display: \"flex\",\n    flex: \"1 1 auto\",\n    alignItems: \"center\",\n  },\n  date: {\n    display: \"flex\",\n  },\n  author: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n","import { formatDistanceToNow } from \"date-fns\";\n\nexport function toRelativeTime(timestamp: string) {\n  return formatDistanceToNow(parseInt(timestamp));\n}\n","import { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button, Container, CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { AppBar } from \"./components/AppBar\";\nimport { AuthenticatedApolloProvider } from \"./components/AuthenticatedApolloProvider\";\nimport { Centered } from \"./components/Centered\";\nimport { ManageQuestionsPage } from \"./pages/ManageQuestionsPage\";\nimport { PlayPage } from \"./pages/PlayPage\";\n\nfunction App() {\n  const { isAuthenticated, isLoading, loginWithRedirect } = useAuth0();\n\n  return (\n    <>\n      <AppBar />\n      <Container maxWidth=\"md\" className=\"App\">\n        {isAuthenticated && (\n          <AuthenticatedApolloProvider>\n            <Switch>\n              <Route exact={true} path=\"/play\">\n                <PlayPage />\n              </Route>\n              <Route exact={true} path=\"/\">\n                <ManageQuestionsPage />\n              </Route>\n            </Switch>\n          </AuthenticatedApolloProvider>\n        )}\n        {isLoading && (\n          <Centered>\n            <CircularProgress />\n          </Centered>\n        )}\n        {!isAuthenticated && !isLoading && (\n          <Centered>\n            <Button variant=\"outlined\" onClick={loginWithRedirect}>Click here to login</Button>\n          </Centered>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { Auth0Provider } from \"@auth0/auth0-react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport \"./index.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport ReactDOM from \"react-dom\";\n\nexport const url = window.location.origin + process.env.REACT_APP_BASENAME;\n\nconst theme = createMuiTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain=\"boiculese.auth0.com\"\n      clientId=\"9umXUJ235FysjsLWAvJKHE43jN7toi4P\"\n      audience=\"https://bogdbo-questions-api.herokuapp.com\"\n      scope=\"start:questions\"\n      redirectUri={url}\n    >\n      <ThemeProvider theme={theme}>\n        <HashRouter basename={process.env.REACT_APP_BASENAME}>\n          <App />\n        </HashRouter>\n      </ThemeProvider>\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}