{"version":3,"sources":["components/AppBar.tsx","components/Centered.tsx","components/AuthenticatedApolloProvider.tsx","utilities/useApolloClient.ts","components/QuestionRow.tsx","components/Questions.tsx","components/AddQuestion.tsx","components/Welcome.tsx","pages/ManageQuestionsPage.tsx","pages/PlayPage.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","tabs","marginLeft","breakpoints","down","AppBar","useAuth0","logout","loginWithRedirect","isAuthenticated","history","useHistory","React","useState","currentTab","setCurrentTab","useEffect","location","pathname","classes","position","Toolbar","Box","display","alignItems","flexGrow","xs","sm","Typography","variant","Tabs","className","value","onChange","_","newTab","push","Tab","label","Button","color","onClick","returnTo","url","Centered","children","boxProps","marginTop","alignContent","justifyContent","justifyItems","AuthenticatedApolloProvider","props","client","getAccessTokenSilently","setClient","then","token","httpLink","createHttpLink","uri","process","authLink","setContext","headers","Authorization","ApolloClient","cache","InMemoryCache","link","concat","useApolloClient","CircularProgress","DELETE_QUESTION","gql","QuestionRow","question","useMutation","deleteQuestion","loading","handleDeleteClick","useCallback","a","variables","id","update","data","getQuestionsQuery","readQuery","query","GET_QUESTIONS","questions","writeQuery","filter","q","canDelete","TableRow","TableCell","align","content","IconButton","disabled","size","Questions","useQuery","error","length","TableContainer","component","Paper","Table","TableHead","TableBody","map","ADD_QUESTION","AddQuestion","text","setText","addQuestion","submitError","handleOnClick","optimisticResponse","__typename","Math","floor","random","createdBy","createdAtUtc","flexDirection","TextField","multiline","rows","ev","target","message","Welcome","auth","marginBottom","user","name","ManageQuestionsPage","padding","RANDOM_QUESTION","nextQuestion","width","PlayPage","refetch","randomQuestion","Card","CardContent","textAlign","App","isLoading","Container","maxWidth","exact","path","window","origin","createMuiTheme","ReactDOM","render","StrictMode","domain","clientId","audience","scope","redirectUri","ThemeProvider","basename","document","getElementById"],"mappings":"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","file":"static/js/main.5e4abc85.chunk.js","sourcesContent":["import { useAuth0 } from \"@auth0/auth0-react\";\nimport MaterialAppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { url } from \"../index\";\n\nconst useStyles = makeStyles((theme) => ({\n  tabs: {\n    marginLeft: \"20px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: \"0\",\n    },\n  },\n}));\n\nexport function AppBar() {\n  const { logout, loginWithRedirect, isAuthenticated } = useAuth0();\n  const history = useHistory();\n  const [currentTab, setCurrentTab] = React.useState(\"/\");\n\n  useEffect(() => {\n    setCurrentTab(history.location.pathname);\n  }, [history]);\n\n  const classes = useStyles();\n\n  const handleTabChange = (_: unknown, newTab: string) => {\n    setCurrentTab(newTab);\n    history.push(newTab);\n  };\n\n  return (\n    <MaterialAppBar position=\"static\">\n      <Toolbar>\n        <Box display=\"flex\" alignItems=\"center\" flexGrow={1}>\n          <Box display={{ xs: \"none\", sm: \"block\" }}>\n            <Typography variant=\"h6\">⁉️ Questions ⁉️</Typography>\n          </Box>\n          {isAuthenticated && (\n            <Tabs\n              className={classes.tabs}\n              value={currentTab}\n              onChange={handleTabChange}\n            >\n              <Tab label=\"⚙️ Manage\" value=\"/\" />\n              <Tab label=\"🕹️ Play\" value=\"/play\" />\n            </Tabs>\n          )}\n        </Box>\n        {isAuthenticated ? (\n          <Button color=\"inherit\" onClick={() => logout({ returnTo: url })}>\n            Logout\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            onClick={() => loginWithRedirect()}\n          >\n            Login\n          </Button>\n        )}\n      </Toolbar>\n    </MaterialAppBar>\n  );\n}\n","import Box from \"@material-ui/core/Box\";\nimport { BoxProps } from \"@material-ui/core/Box/Box\";\nimport React from \"react\";\n\nexport function Centered({\n  children,\n  ...boxProps\n}: React.PropsWithChildren<BoxProps>) {\n  return (\n    <Box\n      marginTop=\"10%\"\n      display=\"flex\"\n      alignItems=\"center\"\n      alignContent=\"center\"\n      justifyContent=\"center\"\n      justifyItems=\"center\"\n      {...boxProps}\n    >\n      {children}\n    </Box>\n  );\n}\n","import { ApolloProvider } from \"@apollo/client\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\nimport { useApolloClient } from \"../utilities/useApolloClient\";\nimport { Centered } from \"./Centered\";\n\nexport function AuthenticatedApolloProvider(\n  props: React.PropsWithChildren<unknown>\n) {\n  const client = useApolloClient();\n  if (!client) {\n    return (\n      <Centered>\n        <CircularProgress />\n      </Centered>\n    );\n  }\n\n  return <ApolloProvider client={client}>{props.children}</ApolloProvider>;\n}\n","import {\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n  NormalizedCacheObject,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useEffect, useState } from \"react\";\n\nexport function useApolloClient() {\n  const { getAccessTokenSilently, isAuthenticated } = useAuth0();\n  const [client, setClient] = useState<ApolloClient<NormalizedCacheObject>>();\n  useEffect(() => {\n    if (!isAuthenticated) {\n      return;\n    }\n\n    getAccessTokenSilently().then((token) => {\n      const httpLink = createHttpLink({\n        uri: process.env.REACT_APP_API_URL,\n      });\n\n      const authLink = setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            Authorization: `Bearer ${token}`,\n          },\n        };\n      });\n\n      setClient(\n        new ApolloClient({\n          cache: new InMemoryCache(),\n          link: authLink.concat(httpLink),\n        })\n      );\n    });\n  }, [isAuthenticated, getAccessTokenSilently]);\n\n  return client;\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { useCallback } from \"react\";\nimport { GET_QUESTIONS } from \"./Questions\";\nimport { Question } from \"./types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst DELETE_QUESTION = gql`\n  mutation addQuestion($id: Int!) {\n    deleteQuestion(id: $id)\n  }\n`;\n\nexport function QuestionRow({ question }: { question: Question }) {\n  const [deleteQuestion, { loading }] = useMutation(DELETE_QUESTION);\n\n  const handleDeleteClick = useCallback(async () => {\n    await deleteQuestion({\n      variables: { id: question.id },\n      update: (cache, { data }) => {\n        if (data.deleteQuestion !== true) {\n          return;\n        }\n\n        const getQuestionsQuery: any =\n          cache.readQuery({ query: GET_QUESTIONS }) || [];\n\n        if (!getQuestionsQuery.questions) {\n          return;\n        }\n\n        cache.writeQuery({\n          query: GET_QUESTIONS,\n          data: {\n            questions: [\n              ...getQuestionsQuery.questions.filter(\n                (q: Question) => q.id !== question.id\n              ),\n            ],\n          },\n        });\n      },\n    });\n  }, [deleteQuestion, question.id]);\n\n  const canDelete = !loading && question.id >= 0;\n\n  return (\n    <TableRow>\n      <TableCell align=\"left\">{question.content}</TableCell>\n      <TableCell align=\"right\">\n        <IconButton disabled={!canDelete} onClick={handleDeleteClick}>\n          {canDelete ? <DeleteOutlinedIcon /> : <CircularProgress size=\"1em\" />}\n        </IconButton>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import { gql, useQuery } from \"@apollo/client\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Centered } from \"./Centered\";\nimport { QuestionRow } from \"./QuestionRow\";\nimport { Question } from \"./types\";\n\nexport const GET_QUESTIONS = gql`\n  query getQuestions {\n    questions {\n      id\n      content\n      createdBy\n      createdAtUtc\n    }\n  }\n`;\n\nexport function Questions() {\n  const { data, error, loading } = useQuery(GET_QUESTIONS);\n\n  if (loading || data == null) {\n    return (\n      <Centered>\n        <Typography variant=\"body1\">Loading questions</Typography>\n      </Centered>\n    );\n  }\n\n  if (error) {\n    return (\n      <Centered>\n        <Typography variant=\"body1\">Error loading questions</Typography>\n      </Centered>\n    );\n  }\n\n  if (data.questions?.length <= 0) {\n    return (\n      <Centered>\n        <Typography variant=\"body1\">No questions added</Typography>\n      </Centered>\n    );\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">Question</TableCell>\n            <TableCell align=\"right\" />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.questions.map((question: Question) => (\n            <QuestionRow question={question} key={question.id} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useCallback, useState } from \"react\";\nimport { GET_QUESTIONS } from \"./Questions\";\n\nconst ADD_QUESTION = gql`\n  mutation addQuestion($content: String!) {\n    addQuestion(content: $content) {\n      id\n      content\n      createdBy\n      createdAtUtc\n    }\n  }\n`;\n\nexport function AddQuestion() {\n  const [text, setText] = useState(\"\");\n\n  const [addQuestion, { error: submitError, loading }] = useMutation(\n    ADD_QUESTION\n  );\n\n  const handleOnClick = useCallback(async () => {\n    setText(\"\");\n    await addQuestion({\n      variables: {\n        content: text,\n      },\n      optimisticResponse: {\n        __typename: \"Mutation\",\n        addQuestion: {\n          __typename: \"Question\",\n          id: -Math.floor(Math.random() * 10000),\n          content: text,\n          createdBy: -1,\n          createdAtUtc: \"\",\n        },\n      },\n      update: (cache, { data }) => {\n        const query: any = cache.readQuery({ query: GET_QUESTIONS });\n        cache.writeQuery({\n          query: GET_QUESTIONS,\n          data: { questions: [data.addQuestion, ...query.questions] },\n        });\n      },\n    });\n  }, [addQuestion, text, setText]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <TextField\n        variant=\"outlined\"\n        multiline={true}\n        rows={5}\n        label=\"Type in a new question\"\n        value={text}\n        onChange={(ev) => setText(ev.target.value)}\n      />\n      <Box marginTop=\"10px\" display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          disabled={text.length === 0 || loading}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleOnClick}\n        >\n          Add question\n        </Button>\n      </Box>\n      <span>{submitError ? submitError.message : \"\"}</span>\n    </Box>\n  );\n}\n","import { useAuth0 } from \"@auth0/auth0-react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nexport function Welcome() {\n  const auth = useAuth0();\n  return (\n    <Box marginBottom=\"10px\">\n      <Typography variant=\"h6\">Welcome {auth.user.name} 👋</Typography>\n    </Box>\n  );\n}\n","import Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport { AddQuestion } from \"../components/AddQuestion\";\nimport { Questions } from \"../components/Questions\";\nimport { Welcome } from \"../components/Welcome\";\n\nexport function ManageQuestionsPage() {\n  return (\n    <Box padding={5}>\n      <Welcome />\n      <AddQuestion />\n      <Questions />\n    </Box>\n  );\n}\n","import { gql, useQuery } from \"@apollo/client\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Centered } from \"../components/Centered\";\n\nconst RANDOM_QUESTION = gql`\n  query getRandomQuestion {\n    randomQuestion {\n      id\n      content\n      createdAtUtc\n    }\n  }\n`;\n\nconst useStyles = makeStyles(() => ({\n  nextQuestion: {\n    marginTop: \"15px\",\n    width: \"100%\",\n  },\n}));\n\nexport function PlayPage() {\n  const { data, loading, refetch, error } = useQuery(RANDOM_QUESTION);\n  const question = data?.randomQuestion;\n  const classes = useStyles();\n  return (\n    <Box padding={5}>\n      <Card>\n        <CardContent>\n          {loading && (\n            <Centered marginTop={0}>\n              <CircularProgress />\n            </Centered>\n          )}\n          {!loading && !error && (\n            <Box textAlign=\"center\">\n              {!question && <Typography>No questions left 😿</Typography>}\n              {question && (\n                <Typography>\n                  {question.content} created {question.createdAtUtc}\n                </Typography>\n              )}\n            </Box>\n          )}\n          {error && <Typography color=\"error\">{error.message}</Typography>}\n        </CardContent>\n      </Card>\n      {(loading || !error) && (\n        <Button\n          className={classes.nextQuestion}\n          color=\"primary\"\n          disabled={loading}\n          onClick={() => refetch()}\n        >\n          Next question\n        </Button>\n      )}\n    </Box>\n  );\n}\n","import { useAuth0 } from \"@auth0/auth0-react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { AppBar } from \"./components/AppBar\";\nimport { AuthenticatedApolloProvider } from \"./components/AuthenticatedApolloProvider\";\nimport { Centered } from \"./components/Centered\";\nimport { ManageQuestionsPage } from \"./pages/ManageQuestionsPage\";\nimport { PlayPage } from \"./pages/PlayPage\";\n\nfunction App() {\n  const { isAuthenticated, isLoading } = useAuth0();\n\n  return (\n    <>\n      <AppBar />\n      <Container maxWidth=\"md\" className=\"App\">\n        {isAuthenticated && (\n          <AuthenticatedApolloProvider>\n            <Switch>\n              <Route exact={true} path=\"/play\">\n                <PlayPage />\n              </Route>\n              <Route exact={true} path=\"/\">\n                <ManageQuestionsPage />\n              </Route>\n            </Switch>\n          </AuthenticatedApolloProvider>\n        )}\n        {isLoading && (\n          <Centered>\n            <CircularProgress />\n          </Centered>\n        )}\n        {!isAuthenticated && !isLoading && (\n          <Centered>\n            <Typography variant=\"h5\">Please login</Typography>\n          </Centered>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { Auth0Provider } from \"@auth0/auth0-react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport ReactDOM from \"react-dom\";\n\nexport const url = window.location.origin + process.env.REACT_APP_BASENAME;\n\nconst theme = createMuiTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain=\"boiculese.auth0.com\"\n      clientId=\"9umXUJ235FysjsLWAvJKHE43jN7toi4P\"\n      audience=\"https://bogdbo-questions-api.herokuapp.com\"\n      scope=\"start:questions\"\n      redirectUri={url}\n    >\n      <ThemeProvider theme={theme}>\n        <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\n          <App />\n        </BrowserRouter>\n      </ThemeProvider>\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}